name: Build

on:
  push:
    branches: [master]
  pull_request: {}
  merge_group: {}
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: x86_64 GCC
            ref: master
            sys: mingw64
            env: x86_64
            opt: SDLCONFIG=
            additional-cmd: cp -a ./package/updater/w64/notbloodupdate ./upload/notbloodupdate.exe
            zipname: win64
          - name: i686 GCC
            ref: master
            sys: mingw32
            env: i686
            pkg: nasm mingw-w64-i686-SDL
            opt: SDLCONFIG=
            additional-cmd: cp -a ./package/updater/w32/notbloodupdate ./upload/notbloodupdate.exe
            zipname: win32
          - name: i686 GCC WinXP
            ref: windows-xp
            sys: mingw32
            env: i686
            pkg: nasm sed unzip mingw-w64-i686-SDL
            opt: SDL_TARGET=1 USE_MIMALLOC=0 USE_LIBVPX=0 USE_OPENGL=0 NETCODE=0
            additional-cmd: wget https://web.archive.org/web/20220310063221if_/https://a.tmp.ninja/rRpytNSd.zip -O temp.zip; unzip temp.zip -d ./upload; echo ADVAPI32.dll\0\0\0\0 with ZDVAPI32.dll\0\0\0\0; sed -i -b -e 's/\x41\x44\x56\x41\x50\x49\x33\x32\x2E\x64\x6C\x6C\x00\x00\x00\x00/\x5A\x44\x56\x41\x50\x49\x33\x32\x2E\x64\x6C\x6C\x00\x00\x00\x00/g' ./notblood.exe; echo KERNEL32.dll\0\0\0\0 with ZERNEL32.dll\0\0\0\0; sed -i -b -e 's/\x4B\x45\x52\x4E\x45\x4C\x33\x32\x2E\x64\x6C\x6C\x00\x00\x00\x00/\x5A\x45\x52\x4E\x45\x4C\x33\x32\x2E\x64\x6C\x6C\x00\x00\x00\x00/g' ./notblood.exe; echo WS2_32.dll\0\0 with ZS2_32.dll\0\0; sed -i -b -e 's/\x57\x53\x32\x5F\x33\x32\x2E\x64\x6C\x6C\x00\x00/\x5A\x53\x32\x5F\x33\x32\x2E\x64\x6C\x6C\x00\x00/g' ./notblood.exe
            zipname: winxp
    name: Windows MSYS2 ${{matrix.name}}
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{matrix.ref}}
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        cache: true
        install: git mingw-w64-${{matrix.env}}-toolchain make ${{matrix.pkg}}
    - name: build
      run: make -j$(nproc) blood ${{matrix.opt}}
    - name: 'prepare files for upload'
      run: |
        mkdir -p ./upload
        ${{matrix.additional-cmd}}
        cp ./notblood.exe ./upload
    - uses: actions/upload-artifact@v2
      with:
        name: notblood-${{matrix.zipname}}
        path: ./upload
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

  build-windows-msys2-testonly:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: x86_64 GCC without SDL
            sys: mingw64
            env: x86_64
            opt: RENDERTYPE=WIN
          - name: i686 GCC without SDL
            sys: mingw32
            env: i686
            opt: RENDERTYPE=WIN
            pkg: nasm
    name: Windows MSYS2 ${{matrix.name}}
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v3
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        cache: true
        install: git mingw-w64-${{matrix.env}}-toolchain make ${{matrix.pkg}}
    - name: build
      run: make -j$(nproc) blood tools SDLCONFIG=

  build-linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: GCC
            pkg: libsdl2-dev
            zipname: gcc
          - name: Clang
            pkg: libsdl2-dev clang
            opt: CLANG=1
            zipname: clang
    name: Linux ${{matrix.name}}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: install-prerequisites
      run: |
        sudo apt-get update
        sudo apt-get -y install libvorbis-dev libflac-dev libvpx-dev libglu1-mesa-dev libgtk2.0-dev ${{matrix.pkg}}
    - name: build
      run: make -j$(nproc) blood tools ${{matrix.opt}}
    - name: 'prepare files for upload'
      run: |
        mkdir -p ./upload
        cp ./notblood ./upload
    - uses: actions/upload-artifact@v2
      with:
        name: notblood-linux-${{matrix.zipname}}
        path: ./upload
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn` 

  build-linux-tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: GCC SDL 1.2
            pkg: libsdl1.2-dev
            opt: SDL_TARGET=1
          - name: GCC SDL 1.2 without GL/NoOne Extensions Disabled
            pkg: libsdl1.2-dev
            opt: SDL_TARGET=1 USE_OPENGL=0 NOONE_EXTENSIONS=0
          - name: Clang without GL
            pkg: libsdl2-dev clang
            opt: CLANG=1 USE_OPENGL=0
          - name: Clang without Polymer
            pkg: libsdl2-dev clang
            opt: CLANG=1 POLYMER=0
    name: Linux ${{matrix.name}}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: install-prerequisites
      run: |
        sudo apt-get update
        sudo apt-get -y install libflac-dev libvpx-dev libgtk2.0-dev ${{matrix.pkg}}
    - name: build
      run: make -j$(nproc) blood tools ${{matrix.opt}}

  build-macos:
    name: macOS Clang
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: install-prerequisites
      run: |
        brew install sdl2 flac libvpx make
        brew unlink lz4
    - name: build
      run: gmake -j2 blood tools
    - name: 'prepare files for upload'
      run: |
        mkdir -p ./upload
        cp ./notblood ./upload
    - uses: actions/upload-artifact@v2
      with:
        name: notblood-macos
        path: ./upload
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn` 
